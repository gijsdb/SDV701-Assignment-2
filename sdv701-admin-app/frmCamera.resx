<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Bp6QAtUiICIiAiIgIiIP/9k=
</value>
  </data>
</root>